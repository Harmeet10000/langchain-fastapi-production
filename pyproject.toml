[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "langchain-fastapi-production"
version = "1.0.0"
description = "Production-grade FastAPI application with LangChain integration"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Your Name", email = "your.email@example.com" }]
maintainers = [{ name = "Your Name", email = "your.email@example.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
keywords = ["fastapi", "langchain", "ai", "api", "async"]
requires-python = ">=3.12,<3.13"
dependencies = [
    "fastapi[standard]>=0.115.0,<0.116.0",
    "uvicorn[standard]>=0.30.0,<0.31.0",
    "pydantic>=2.9.0,<3.0.0",
    "pydantic-settings>=2.5.0,<3.0.0",
    "python-multipart>=0.0.12",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "email-validator>=2.2.0",
    "httpx>=0.27.0",
    "langchain==0.3.27",
    "langchain-core==0.3.76",
    "langchain-community==0.3.30",
    "langchain-google-genai==2.1.12",
    "langchain-pinecone==0.2.12",
    "langgraph==0.6.8",
    "langsmith==0.4.32",
    "fastmcp==2.11.0",
    "google-genai",
    "pinecone==7.3.0",
    "tiktoken==0.7.0",
    "pypdf==6.1.1",
    "python-docx==1.1.2",
    "openpyxl==3.1.5",
    "python-pptx==1.0.2",
    "beautifulsoup4==4.12.3",
    "lxml==5.3.0",
    "markdownify==0.13.0",
    "markdown==3.9.0",
    "unstructured==0.15.3",
    "crawl4ai==0.7.4",
    "motor==3.7.1",
    "pymongo==4.11.0",
    "redis[hiredis]>=5.1.0,<6.0.0",
    "sqlalchemy==2.0.39",
    "alembic==1.16.5",
    "asyncpg==0.29.0",
    "python-json-logger==2.0.7",
    "structlog==25.4.0",
    "black==24.10.0",
    "isort==5.13.2",
    "mypy==1.18.2",
    "pylint==3.3.2",
    "ruff==0.7.1",
    "pre-commit==4.1.0",
    "python-dotenv==1.1.0",
    "cryptography==46.0.2",
    "pyjwt==2.9.0",
    "tenacity==9.1.2",
    "aiofiles==24.1.0",
    "orjson==3.10.1",
    "ujson==5.10.0",
    "nanoid==2.0.0",
    "python-slugify==8.0.4",
    "numpy==1.26.4",
    "pandas==2.2.1",
    "scikit-learn==1.5.0",
    "slowapi==0.1.9",
    "fastapi-pagination==0.12.1",
    "fastapi-cache2==0.2.1",
    "wikipedia==1.4.0",
    "requests==2.32.5",

]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "factory-boy>=3.3.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/Harmeet10000/langchain-fastapi-production"
Documentation = "https://github.com/Harmeet10000/langchain-fastapi-production#readme"
Repository = "https://github.com/Harmeet10000/langchain-fastapi-production"
"Bug Tracker" = "https://github.com/Harmeet10000/langchain-fastapi-production/issues"

[project.scripts]
start = "uvicorn.main:main"
dev = "src.cli:main"

# Tool configurations
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["fastapi", "pydantic", "sqlalchemy", "langchain"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["langchain.*", "openai.*", "redis.*", "asyncpg.*"]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit configuration (security linting)
[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

# Flake8 configuration (in setup.cfg format since flake8 doesn't support pyproject.toml yet)
