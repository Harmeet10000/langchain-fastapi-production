[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "langchain-fastapi-production"
version = "1.0.0"
description = "Production-grade FastAPI application with LangChain integration"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Harmeet Singh", email = "harmeetsinghfbd@gmail.com" }]
maintainers = [{ name = "Harmeet Singh", email = "harmeetsinghfbd@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
keywords = ["fastapi", "langchain", "ai", "api", "async"]
requires-python = ">=3.12,<3.13"
dependencies = [
    # --- CORE FRAMEWORK (Relaxed Upper Bounds) ---
    "fastapi[standard]>=0.115.0,<1.0.0", # Latest major is 0.120.0 (Oct 23, 2025) - relaxed to <1.0.0
    "uvicorn[standard]>=0.30.0,<1.0.0",
    "uvloop>=0.21.0,<1.0.0",
    "pydantic>=2.9.0,<3.0.0",
    "pydantic-settings>=2.5.0,<3.0.0", # Latest major is 2.11.0 (Sep 24, 2025)
    "httpx>=0.27.0,<1.0.0",

    # --- LLM/RAG STACK (Kept Tight Due to Volatility) ---
    "langchain==0.3.27",
    "langchain-core==0.3.76",
    "langchain-community==0.3.30",
    "langchain-google-genai==2.1.12",
    "langgraph==0.6.8",
    "langsmith==0.4.32",
    "pinecone>=7.3.0",

    # --- UTILITIES & STORAGE (Relaxed Upper Bounds) ---
    "python-multipart>=0.0.12,<1.0.0",
    "fastmcp>=2.11.0,<3.0.0",
    "crawl4ai>=0.7.4,<1.0.0",
    "beautifulsoup4==4.12.3", # Keep tight if specific version behavior is needed
    "lxml==5.3.0", # Keep tight for C-lib dependencies
    "bleach>=6.2.0,<7.0.0",
    "motor==3.7.1", # Keep tight for C-lib/async stability
    "pymongo==4.11.0", # Keep tight for C-lib stability
    "redis[hiredis]>=5.1.0,<6.0.0",
    "sqlalchemy==2.0.39",
    "alembic==1.16.5",
    "asyncpg==0.29.0",
    "python-dotenv==1.1.0",
    "loguru==0.7.3",
    "cryptography==46.0.2",
    "tenacity==9.1.2",
    "aiofiles==24.1.0",
    "orjson==3.10.1",
    "nanoid==2.0.0",
    "python-slugify==8.0.4",
    "fastapi-pagination==0.12.1",
    "fastapi-cache2==0.2.1",
    "psutil==7.1.0",
    "celery==5.5.3",
    "aiohttp==3.12.15",
    "aiohttp-retry==2.9.1",
    "fastapi-limiter==0.1.6",
    "prometheus-client>=0.23.1",
]

[project.optional-dependencies]
dev = [
    # --- TESTING (Updated) ---
    "pytest>=8.2.2,<9.0.0", # Latest is 8.2.2 (Sep 24, 2025) - Relaxed to <9.0.0
    "pytest-asyncio>=0.23.7,<1.0.0", # Latest is 0.23.7 (Oct 16, 2025) - Relaxed to <1.0.0
    "pytest-cov>=5.0.0,<6.0.0", # Latest is 7.0.0 (Sep 9, 2025) - Relaxed to <6.0.0
    "httpx>=0.27.0,<1.0.0", # Matched to runtime version

    # --- QUALITY (Latest Versions) ---
    "mypy==1.18.2", # Latest stable version (Sep 18, 2025)
    "ruff==0.14.2", # Latest stable version (Oct 23, 2025)
    "pre-commit==4.3.0", # Latest stable version (Aug 9, 2025)
    "bandit>=1.8.6,<2.0.0", # Latest stable version is 1.8.6 (Jul 5, 2025)
    "safety>=3.6.2,<4.0.0", # Latest stable version is 3.6.2 (Sep 24, 2025)
]
test = [
    "pytest>=8.2.2,<9.0.0",
    "pytest-asyncio>=0.23.7,<1.0.0",
    "pytest-cov>=5.0.0,<6.0.0",
    "httpx>=0.27.0,<1.0.0",
    "factory-boy>=3.3.0,<4.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/Harmeet10000/langchain-fastapi-production"
Documentation = "https://github.com/Harmeet10000/langchain-fastapi-production#readme"
Repository = "https://github.com/Harmeet10000/langchain-fastapi-production"
"Bug Tracker" = "https://github.com/Harmeet10000/langchain-fastapi-production/issues"

[project.scripts]
start = "uvicorn.main:main"
dev = "src.cli:main"

# Tool configurations
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json"]

# Ruff configuration
[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP", "B", "A", "C4", "DTZ", "T10", "EM", "ISC", "ICN", "PIE", "PT", "Q", "RSE", "RET", "SIM", "TID", "ARG", "PTH", "PD", "PL", "TRY", "RUF"]
ignore = ["E501", "ISC001", "TRY003", "PLR0913", "PLR2004"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "PLR2004", "ARG001"]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["src"]
known-third-party = ["fastapi", "pydantic", "sqlalchemy", "langchain"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# MyPy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["langchain.*", "openai.*", "redis.*", "asyncpg.*"]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit configuration (security linting)
[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

